regExp { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true }
R Layer {
  handle: [Function],
  name: '<anonymous>',
  params: {},
  path: '',
  keys: [],
  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
  route: undefined }
regExp { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true }
R Layer {
  handle: [Function: compression],
  name: 'compression',
  params: {},
  path: '',
  keys: [],
  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
  route: undefined }
regExp { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true }
R Layer {
  handle: [Function: corsMiddleware],
  name: 'corsMiddleware',
  params: {},
  path: '',
  keys: [],
  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
  route: undefined }
regExp { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true }
R Layer {
  handle: [Function: serveStatic],
  name: 'serveStatic',
  params: {},
  path: '',
  keys: [],
  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
  route: undefined }
regExp { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true }
R Layer {
  handle: [Function: logger],
  name: 'logger',
  params: {},
  path: '',
  keys: [],
  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
  route: undefined }
regExp { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true }
R Layer {
  handle: [Function],
  name: '<anonymous>',
  params: {},
  path: '',
  keys: [],
  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
  route: undefined }
regExp { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true }
R Layer {
  handle: [Function],
  name: '<anonymous>',
  params: {},
  path: '',
  keys: [],
  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
  route: undefined }
regExp { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true }
R Layer {
  handle: [Function: bound dispatch],
  name: 'bound dispatch',
  params: undefined,
  path: undefined,
  keys: [],
  regexp: { /^\/auth\/?$/i fast_star: false, fast_slash: false },
  route:
   Route {
     path: '/auth',
     stack:
      [ [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer] ],
     methods:
      { acl: true,
        bind: true,
        checkout: true,
        connect: true,
        copy: true,
        delete: true,
        get: true,
        head: true,
        link: true,
        lock: true,
        'm-search': true,
        merge: true,
        mkactivity: true,
        mkcalendar: true,
        mkcol: true,
        move: true,
        notify: true,
        options: true,
        patch: true,
        post: true,
        propfind: true,
        proppatch: true,
        purge: true,
        put: true,
        rebind: true,
        report: true,
        search: true,
        source: true,
        subscribe: true,
        trace: true,
        unbind: true,
        unlink: true,
        unlock: true,
        unsubscribe: true } } }
R Layer {
  handle: [Function],
  name: '<anonymous>',
  params: {},
  path: '',
  keys: [],
  regexp: { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true },
  route: undefined }
regExp { /^\/?(?=\/|$)/i fast_star: false, fast_slash: true }
R Layer {
  handle: [Function: bound dispatch],
  name: 'bound dispatch',
  params: {},
  path: '/db',
  keys: [],
  regexp: { /^\/db\/?$/i fast_star: false, fast_slash: false },
  route:
   Route {
     path: '/db',
     stack:
      [ [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer] ],
     methods:
      { acl: true,
        bind: true,
        checkout: true,
        connect: true,
        copy: true,
        delete: true,
        get: true,
        head: true,
        link: true,
        lock: true,
        'm-search': true,
        merge: true,
        mkactivity: true,
        mkcalendar: true,
        mkcol: true,
        move: true,
        notify: true,
        options: true,
        patch: true,
        post: true,
        propfind: true,
        proppatch: true,
        purge: true,
        put: true,
        rebind: true,
        report: true,
        search: true,
        source: true,
        subscribe: true,
        trace: true,
        unbind: true,
        unlink: true,
        unlock: true,
        unsubscribe: true } } }
